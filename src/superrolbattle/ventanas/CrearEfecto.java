/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package superrolbattle.ventanas;

import instancias.Token;
import instancias.properties.Extremidad;
import instancias.properties.alteracion.Efecto;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JSpinner;
import recursos.Constantes;
import recursos.Recursos;

/**
 *
 * @author TiranoJuan
 */
public class CrearEfecto extends javax.swing.JDialog {

    /**
     * Creates new form CrearEfecto
     */
    public CrearEfecto(java.awt.Frame parent, boolean modal, Token tok, int tipoEfecto) {
        super(parent, modal);
        initComponents();
        if (tipoEfecto == CrearNewAlter.ALTERACION_HERIDA) {
            jComboBox_tipos_efectos.setModel(new DefaultComboBoxModel(Efecto.todosLosEfectosDeHeridas().toArray()));
        } else if (tipoEfecto == CrearNewAlter.ALTERACION_CURACION) {
            jComboBox_tipos_efectos.setModel(new DefaultComboBoxModel(Efecto.todosLosEfectosCurativos().toArray()));
        } else {
            jComboBox_tipos_efectos.setModel(new DefaultComboBoxModel(Efecto.todosLosEfectosMods().toArray()));
        }

        if (ef != null) {
            this.setTitle("Editar Efecto");
            jCheckBox_activo.setEnabled(true);
            jComboBox_tipos_efectos.setEnabled(false);
            int tipo, dura;
            tipo = ef.getTipo();

            jSpinner_duracion.setValue(ef.getDuracion());
            int as = ef.getDuracion();
            if (as > 60480) {
                dura = Recursos.asaltosParse(as, Constantes.TIEMPO_SEMANAS);
                jComboBox_tipo_tiempo.setSelectedIndex(Constantes.TIEMPO_SEMANAS);
            } else if (as > 8640) {
                dura = Recursos.asaltosParse(as, Constantes.TIEMPO_DIAS);
                jComboBox_tipo_tiempo.setSelectedIndex(Constantes.TIEMPO_DIAS);
            } else if (as > 360) {
                dura = Recursos.asaltosParse(as, Constantes.TIEMPO_HORAS);
                jComboBox_tipo_tiempo.setSelectedIndex(Constantes.TIEMPO_HORAS);
            } else if (as > 12) {
                dura = Recursos.asaltosParse(as, Constantes.TIEMPO_MINUTOS);
                jComboBox_tipo_tiempo.setSelectedIndex(Constantes.TIEMPO_MINUTOS);
            } else {
                dura = as;
            }
            jSpinner_duracion.setValue(dura);
            jCheckBox_reg_pro.setSelected(ef.isRegeneracion_progresiva());

            if (tipo < Efecto.TIPOS_UNO_A_UNO) {
                jSpinner_numeros.setValue(ef.getValueActual());

            } else if (tipo > Efecto.TIPOS_UNO_A_UNO && tipo < Efecto.TIPOS_CINCO_A_CINCO) {                
                jSpinner_cinco.setValue(ef.getValueActual());
            } else if (tipo > Efecto.TIPOS_SOLO_UNO && tipo < Efecto.TIPOS_EXTREMIDAD) {
                jComboBox_extremidades.setSelectedIndex(ef.getValue());
            }
        }

        jComboBox_extremidades.setModel(new DefaultComboBoxModel(tok.getExtremidades().toArray()));

        tipoEfecto(0);
    }
    public CrearEfecto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        jComboBox_tipos_efectos.setModel(new DefaultComboBoxModel(Efecto.todosLosEfectos().toArray()));
        
        ArrayList<Extremidad> al_ext= new ArrayList();
        // Brazos
        al_ext.add(new Extremidad(true, true, false, Extremidad.MIEMBRO_SUPERIOR_IZQUIERDO, null));        
        al_ext.add(new Extremidad(true, true, true, Extremidad.MIEMBRO_SUPERIOR_IZQUIERDO, null));
        
        // Piernas
        al_ext.add(new Extremidad(true, false, false, Extremidad.MIEMBRO_SUPERIOR_IZQUIERDO, null));       
        al_ext.add(new Extremidad(true, false, true, Extremidad.MIEMBRO_SUPERIOR_IZQUIERDO, null));
       
        jComboBox_extremidades.setModel(new DefaultComboBoxModel(al_ext.toArray()));

        tipoEfecto(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox_tipos_efectos = new javax.swing.JComboBox<>();
        jCheckBox_activo = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel_value = new javax.swing.JPanel();
        jSpinner_numeros = new javax.swing.JSpinner();
        jComboBox_extremidades = new javax.swing.JComboBox<>();
        jSpinner_cinco = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSpinner_duracion = new javax.swing.JSpinner();
        jComboBox_tipo_tiempo = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jCheckBox_reg_pro = new javax.swing.JCheckBox();
        jPanel_Aceptar_cancelar = new javax.swing.JPanel();
        jButton_aceptar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nuevo Efecto");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));

        jComboBox_tipos_efectos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_tipos_efectos.setPreferredSize(new java.awt.Dimension(156, 20));
        jComboBox_tipos_efectos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_tipos_efectosItemStateChanged(evt);
            }
        });
        jPanel1.add(jComboBox_tipos_efectos);

        jCheckBox_activo.setSelected(true);
        jCheckBox_activo.setText("Activo");
        jCheckBox_activo.setEnabled(false);
        jPanel1.add(jCheckBox_activo);

        getContentPane().add(jPanel1);

        jPanel3.setPreferredSize(new java.awt.Dimension(229, 24));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 1));

        jLabel2.setText("Valor");
        jPanel3.add(jLabel2);

        jSpinner_numeros.setModel(new javax.swing.SpinnerNumberModel(0, 0, 25, 1));
        jSpinner_numeros.setMinimumSize(new java.awt.Dimension(50, 20));
        jSpinner_numeros.setPreferredSize(new java.awt.Dimension(50, 20));
        jPanel_value.add(jSpinner_numeros);

        jComboBox_extremidades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Asaltos", "Minutos", "Horas", "Dias", "Semanas" }));
        jPanel_value.add(jComboBox_extremidades);

        jSpinner_cinco.setModel(new javax.swing.SpinnerNumberModel(0, 0, 250, 5));
        jSpinner_cinco.setMinimumSize(new java.awt.Dimension(50, 20));
        jSpinner_cinco.setPreferredSize(new java.awt.Dimension(50, 20));
        jPanel_value.add(jSpinner_cinco);

        jPanel3.add(jPanel_value);

        getContentPane().add(jPanel3);

        jLabel1.setText("Duracion");
        jPanel2.add(jLabel1);

        jSpinner_duracion.setModel(new javax.swing.SpinnerNumberModel(1, 0, null, 1));
        jSpinner_duracion.setPreferredSize(new java.awt.Dimension(50, 20));
        jPanel2.add(jSpinner_duracion);

        jComboBox_tipo_tiempo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Asaltos", "Miinutos", "Horas", "Dias" }));
        jPanel2.add(jComboBox_tipo_tiempo);

        getContentPane().add(jPanel2);

        jCheckBox_reg_pro.setText("Regeneracion Progresiva");
        jPanel4.add(jCheckBox_reg_pro);

        getContentPane().add(jPanel4);

        jPanel_Aceptar_cancelar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Aceptar_cancelar.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButton_aceptar.setText("Aceptar");
        jButton_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_aceptarActionPerformed(evt);
            }
        });
        jPanel_Aceptar_cancelar.add(jButton_aceptar);

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel_Aceptar_cancelar.add(jButton2);

        getContentPane().add(jPanel_Aceptar_cancelar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_tipos_efectosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_tipos_efectosItemStateChanged
        Efecto e = (Efecto) jComboBox_tipos_efectos.getSelectedItem();
        tipoEfecto(e.getTipo());
    }//GEN-LAST:event_jComboBox_tipos_efectosItemStateChanged

    private void jButton_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_aceptarActionPerformed
        if (ef != null) {
            editar();
        } else {
            crear();
        }
        this.dispose();
    }//GEN-LAST:event_jButton_aceptarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tipoEfecto(int tipo) {

        if (tipo < Efecto.TIPOS_UNO_A_UNO) {
            jSpinner_numeros.setVisible(true);
            jComboBox_extremidades.setVisible(false);
            jSpinner_cinco.setVisible(false);

        } else if (tipo > Efecto.TIPOS_UNO_A_UNO && tipo < Efecto.TIPOS_CINCO_A_CINCO) {
            jSpinner_numeros.setVisible(false);
            jComboBox_extremidades.setVisible(false);
            jSpinner_cinco.setVisible(true);
        } else if (tipo > Efecto.TIPOS_SOLO_UNO && tipo < Efecto.TIPOS_EXTREMIDAD) {
            jSpinner_numeros.setVisible(false);
            jComboBox_extremidades.setVisible(true);
            jSpinner_cinco.setVisible(false);
        } else if (tipo == Efecto.TIPO_CAMBIO_ARMADURA) {

        }

        if (tipo == Efecto.TIPO_ATURDIDO || tipo == Efecto.TIPO_ATURDIDO_SIN_PARAR || tipo == Efecto.TIPO_DORMIDO || tipo == Efecto.TIPO_OBLIGADO_A_PARAR) {
            jSpinner_numeros.setEnabled(false);
        } else {
            jSpinner_numeros.setEnabled(true);
        }
        if (tipo == Efecto.TIPO_SANGRADO) {
            jComboBox_tipo_tiempo.setSelectedIndex(3); // seleciona dias
            jSpinner_duracion.setValue(1);
        }
    }

    private void mostrarTipoEfecto(int tipo) {

        if (tipo < Efecto.TIPOS_UNO_A_UNO) {
            jSpinner_numeros.setVisible(true);
            jSpinner_numeros.setValue(ef.getValueActual());
            jComboBox_extremidades.setVisible(false);
            jSpinner_cinco.setVisible(false);

        } else if (tipo > Efecto.TIPOS_UNO_A_UNO && tipo < Efecto.TIPOS_CINCO_A_CINCO) {
            jSpinner_numeros.setVisible(false);
            jComboBox_extremidades.setVisible(false);
            jSpinner_cinco.setVisible(true);
            jSpinner_cinco.setValue(ef.getValueActual());
        } else if (tipo > Efecto.TIPOS_SOLO_UNO && tipo < Efecto.TIPOS_EXTREMIDAD) {
            jSpinner_numeros.setVisible(false);
            jComboBox_extremidades.setVisible(true);
            jComboBox_extremidades.setSelectedIndex(ef.getValueActual());
            jSpinner_cinco.setVisible(false);
        } else if (tipo == Efecto.TIPO_CAMBIO_ARMADURA) {

        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton_aceptar;
    private javax.swing.JCheckBox jCheckBox_activo;
    private javax.swing.JCheckBox jCheckBox_reg_pro;
    private javax.swing.JComboBox<String> jComboBox_extremidades;
    private javax.swing.JComboBox<String> jComboBox_tipo_tiempo;
    private javax.swing.JComboBox<String> jComboBox_tipos_efectos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel_Aceptar_cancelar;
    private javax.swing.JPanel jPanel_value;
    private javax.swing.JSpinner jSpinner_cinco;
    private javax.swing.JSpinner jSpinner_duracion;
    private javax.swing.JSpinner jSpinner_numeros;
    // End of variables declaration//GEN-END:variables
    private Token tok;

    public static Efecto ef;

    public static Efecto CrearEfecto(java.awt.Frame parent, boolean modal, Token tok, int tipoAlt) {
        ef = null;
        CrearEfecto ce = new CrearEfecto(parent, modal, tok, tipoAlt);
        ce.setLocationRelativeTo(null);
        ce.setVisible(true);
        return ef;
    }
    
    public static Efecto CrearEfecto(java.awt.Frame parent, boolean modal) {
        ef = null;
        CrearEfecto ce = new CrearEfecto(parent, modal);
        ce.setLocationRelativeTo(null);
        ce.setVisible(true);
        return ef;
    }

    public static Efecto EditarEfecto(java.awt.Frame parent, boolean modal, Token tok, Efecto efecto) {
        ef = efecto;
        CrearEfecto ce = new CrearEfecto(parent, modal, tok, CrearNewAlter.ALTERACION_HERIDA);
        ce.setLocationRelativeTo(null);
        ce.setVisible(true);
        return ef;
    }

    private void crear() {
        ef = new Efecto();
        ef.setActivo(true);
        Efecto e = (Efecto) jComboBox_tipos_efectos.getSelectedItem();
        int tipo = e.getTipo();

        ef.setTipo(e.getTipo());
        int d = (Integer) jSpinner_duracion.getValue();
        int duracion = Recursos.tiempoEnAsaltosParse(d, jComboBox_tipo_tiempo.getSelectedIndex());

        ef.setDuracion(duracion);
        ef.setRegeneracion_progresiva(jCheckBox_reg_pro.isSelected());

        int value = 0;
        if (tipo < Efecto.TIPOS_UNO_A_UNO) {
            value = (Integer) jSpinner_numeros.getValue();

        } else if (tipo > Efecto.TIPOS_UNO_A_UNO && tipo < Efecto.TIPOS_CINCO_A_CINCO) {
            value = (Integer) jSpinner_cinco.getValue();
        } else if (tipo > Efecto.TIPOS_SOLO_UNO && tipo < Efecto.TIPOS_EXTREMIDAD) {
            value = (Integer) jComboBox_extremidades.getSelectedIndex();

        } else if (tipo == Efecto.TIPO_CAMBIO_ARMADURA) {

        }
        ef.setValue(value);
    }

    private void editar() {
        int tipo = ef.getTipo();

        ef.setTipo(ef.getTipo());
        int d = (Integer) jSpinner_duracion.getValue();
        int duracion = Recursos.tiempoEnAsaltosParse(d, jComboBox_tipo_tiempo.getSelectedIndex());

        ef.setDuracion(duracion);
        ef.setRegeneracion_progresiva(jCheckBox_reg_pro.isSelected());

        int value = 0;
        if (tipo < Efecto.TIPOS_UNO_A_UNO) {
            value = (Integer) jSpinner_numeros.getValue();

        } else if (tipo > Efecto.TIPOS_UNO_A_UNO && tipo < Efecto.TIPOS_CINCO_A_CINCO) {
            value = (Integer) jSpinner_cinco.getValue();
        } else if (tipo > Efecto.TIPOS_SOLO_UNO && tipo < Efecto.TIPOS_EXTREMIDAD) {
            value = (Integer) jComboBox_extremidades.getSelectedIndex();

        } else if (tipo == Efecto.TIPO_CAMBIO_ARMADURA) {

        }
        ef.setValue(value);
        ef.setActivo(jCheckBox_activo.isSelected());
    }

}
