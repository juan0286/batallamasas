/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package superrolbattle;

import instancias.Accion;
import instancias.CampoDeBatalla;
import instancias.Evento;
import instancias.ListaDeSortilegios;
import instancias.Sortilegio;
import instancias.Token;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.LayoutManager;
import java.awt.Point;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.SortedSet;
import java.util.TreeSet;
import java.util.Vector;
import java.util.concurrent.RecursiveAction;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JViewport;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import recursos.AbrirGuardar;
import recursos.CargaBase;
import recursos.Constantes;
import recursos.DataRecursos;
import recursos.Recursos;
import static recursos.Recursos.guardarConfig;
import static recursos.Recursos.verTabla;
import recursos.subprocess.LoadingProcess;
import superrolbattle.ventanas.*;

/**
 *
 * @author Juan
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form principal
     */
    public Principal() {
        initComponents();
        jPanel_SinAcciones_panel.getVerticalScrollBar().setUnitIncrement(110);
        jPanel_CargaSortilegios_panel.getVerticalScrollBar().setUnitIncrement(110);
        jPanel_RealizaSortilegios_panel.getVerticalScrollBar().setUnitIncrement(110);
        jPanel_CargaProyectiles_panel.getVerticalScrollBar().setUnitIncrement(110);
        jPanel_pararProyectil_panel.getVerticalScrollBar().setUnitIncrement(110);
        jPanel_MovimientoYManiobra_panel.getVerticalScrollBar().setUnitIncrement(110);
        jPanel_AtaqueCuperpoaCuerpo_panel.getVerticalScrollBar().setUnitIncrement(110);
        jPanel_Movimiento_panel.getVerticalScrollBar().setUnitIncrement(110);
        jPanel_MovimientoEstatico_panel.getVerticalScrollBar().setUnitIncrement(110);

        jScrollPane_asaltos.getHorizontalScrollBar().setUnitIncrement(250);
        Toolkit t = Toolkit.getDefaultToolkit();
        //Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        // int hd = screenSize.width-2;
        // jScrollPane_asaltos.setMaximumSize(new Dimension(hd, screenSize.height));
        //jPanel_sinAcciones_tokens.setMaximumSize(new Dimension(hd, 95));
        Recursos.iniciarConfig();
        aws = new ArrayList<JPanelFormToken_Accion>();
        try {
            AbrirGuardar.directorio();
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        jLabel_uso_ao.setVisible(false);
        campo = new CampoDeBatalla(); //
        registro = new StringBuilder();
        ag = new AbrirGuardar();
        campo.setCajaDeRegistro(jEditorPane_cajaDeRegistro);
        Principal.ventana = this;
        loadCampoDeBatalla();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel_General = new javax.swing.JPanel();
        jPanel_Acciones = new javax.swing.JPanel();
        jPanel_barra_acciones = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton_crear_pj = new javax.swing.JButton();
        jLabel_uso_ao = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_asalto = new javax.swing.JTextField();
        jButton_definir = new javax.swing.JButton();
        jButton_comenzar = new javax.swing.JButton();
        jButton_terminar = new javax.swing.JButton();
        jPanel_center = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel_Campo_tab = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel_Pjs = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel_Pnj = new javax.swing.JPanel();
        jPanel_Asaltos_tab = new javax.swing.JPanel();
        jScrollPane_asaltos = new javax.swing.JScrollPane();
        jPanel_Asaltos = new javax.swing.JPanel();
        jPanel_SinAcciones = new javax.swing.JPanel();
        jPanel_Titulo_SinAcciones = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel_SinAcciones_panel = new javax.swing.JScrollPane();
        jPanel_campo_sinAcciones = new javax.swing.JPanel();
        jPanel_CargaSortilegios = new javax.swing.JPanel();
        jPanel_Titulo_cargaSortilegios = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton_avanzarFaseAsalto1 = new javax.swing.JButton();
        jPanel_CargaSortilegios_panel = new javax.swing.JScrollPane();
        jPanel_campo_CargaSortilegios = new javax.swing.JPanel();
        jPanel_RealizaSortilegios = new javax.swing.JPanel();
        jPanel_Titulo_RealizaSortilegios = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton_avanzarFaseAsalto2 = new javax.swing.JButton();
        jPanel_RealizaSortilegios_panel = new javax.swing.JScrollPane();
        jPanel_campo_RealizaSortilegios = new javax.swing.JPanel();
        jPanel_LanzaProyectiles = new javax.swing.JPanel();
        jPanel_Titulo_DisparaProyectiles = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jButton_avanzarFaseAsalto3 = new javax.swing.JButton();
        jPanel_LanzaProyectiles_panel = new javax.swing.JScrollPane();
        jPanel_campo_LanzaProyectiles = new javax.swing.JPanel();
        jPanel_CargaProyectiles = new javax.swing.JPanel();
        jPanel_Titulo_cargaProyectiles = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton_avanzarFaseAsalto4 = new javax.swing.JButton();
        jPanel_CargaProyectiles_panel = new javax.swing.JScrollPane();
        jPanel_campo_CargaProyectiles = new javax.swing.JPanel();
        jPanel_PararProyectiles = new javax.swing.JPanel();
        jPanel_Titulo_PararProyectiles = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jButton_avanzarFaseAsalto5 = new javax.swing.JButton();
        jPanel_pararProyectil_panel = new javax.swing.JScrollPane();
        jPanel_campo_PararProyectiles = new javax.swing.JPanel();
        jPanel_movimientoYmaniobra = new javax.swing.JPanel();
        jPanel_Titulo_movimientoYmaniobra = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButton_avanzarFaseAsalto6 = new javax.swing.JButton();
        jPanel_MovimientoYManiobra_panel = new javax.swing.JScrollPane();
        jPanel_campo_movimientoYmaniobra = new javax.swing.JPanel();
        jPanel_AtaqueCuerpoaCuerpo = new javax.swing.JPanel();
        jPanel_Titulo_AtaqueCuerpoaCuerpo = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jButton_avanzarFaseAsalto7 = new javax.swing.JButton();
        jPanel_AtaqueCuperpoaCuerpo_panel = new javax.swing.JScrollPane();
        jPanel_campo_AtaqueCuerpoaCuerpo = new javax.swing.JPanel();
        jPanel_Movimiento = new javax.swing.JPanel();
        jPanel_Titulo_Movimiento = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jButton_avanzarFaseAsalto8 = new javax.swing.JButton();
        jPanel_Movimiento_panel = new javax.swing.JScrollPane();
        jPanel_campo_Movimiento = new javax.swing.JPanel();
        jPanel_MovimientoEstatico = new javax.swing.JPanel();
        jPanel_Titulo_MovimientoEstatico = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jButton_avanzarFaseAsalto9 = new javax.swing.JButton();
        jPanel_MovimientoEstatico_panel = new javax.swing.JScrollPane();
        jPanel_campo_MovimientoEstatico = new javax.swing.JPanel();
        jPanel_Resumen_tab = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jToggleButton_visibles = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane_cajaDeRegistro = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu_File = new javax.swing.JMenu();
        jMenuItem_nuevo = new javax.swing.JMenuItem();
        jMenuItem_Abrir = new javax.swing.JMenuItem();
        jMenuItem_Guardar = new javax.swing.JMenuItem();
        jMenuItem_guardarComo = new javax.swing.JMenuItem();
        jMenuItem_Salir = new javax.swing.JMenuItem();
        jMenu_Edit = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu_help = new javax.swing.JMenu();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RoleMaster Actions 1.0");
        setMaximumSize(new java.awt.Dimension(1024, 860));

        jPanel_General.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_General.setAutoscrolls(true);
        jPanel_General.setMaximumSize(new java.awt.Dimension(720, 410));
        jPanel_General.setLayout(new java.awt.BorderLayout());

        jPanel_Acciones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Acciones.setMinimumSize(new java.awt.Dimension(424, 75));
        jPanel_Acciones.setPreferredSize(new java.awt.Dimension(396, 75));
        jPanel_Acciones.setLayout(new javax.swing.BoxLayout(jPanel_Acciones, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel_barra_acciones.setMaximumSize(new java.awt.Dimension(100007, 50));
        jPanel_barra_acciones.setMinimumSize(new java.awt.Dimension(300, 0));
        jPanel_barra_acciones.setLayout(new javax.swing.BoxLayout(jPanel_barra_acciones, javax.swing.BoxLayout.LINE_AXIS));

        jButton1.setText("Agregar Enemigo");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel_barra_acciones.add(jButton1);

        jButton_crear_pj.setText("Agregar Personaje");
        jButton_crear_pj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_crear_pjMouseClicked(evt);
            }
        });
        jButton_crear_pj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_crear_pjActionPerformed(evt);
            }
        });
        jPanel_barra_acciones.add(jButton_crear_pj);

        jLabel_uso_ao.setText("     Usar Shift + click para accion de oportunidad");
        jPanel_barra_acciones.add(jLabel_uso_ao);

        jPanel_Acciones.add(jPanel_barra_acciones);

        jPanel2.setMinimumSize(new java.awt.Dimension(420, 50));
        jPanel2.setPreferredSize(new java.awt.Dimension(426, 50));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setText("Nùmero de Asalto");
        jPanel2.add(jLabel2);

        jTextField_asalto.setEditable(false);
        jTextField_asalto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_asalto.setText("0");
        jTextField_asalto.setMaximumSize(new java.awt.Dimension(25, 25));
        jPanel2.add(jTextField_asalto);

        jButton_definir.setText("Definir Acciones");
        jButton_definir.setMaximumSize(new java.awt.Dimension(109, 70));
        jButton_definir.setPreferredSize(new java.awt.Dimension(109, 70));
        jButton_definir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_definirActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_definir);

        jButton_comenzar.setText("Comenzar Asalto");
        jButton_comenzar.setEnabled(false);
        jButton_comenzar.setMaximumSize(new java.awt.Dimension(113, 70));
        jButton_comenzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_comenzarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_comenzar);

        jButton_terminar.setText("Terminar Asalto");
        jButton_terminar.setEnabled(false);
        jButton_terminar.setMaximumSize(new java.awt.Dimension(107, 70));
        jButton_terminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_terminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_terminar);

        jPanel_Acciones.add(jPanel2);

        jPanel_General.add(jPanel_Acciones, java.awt.BorderLayout.PAGE_START);

        jPanel_center.setMaximumSize(new java.awt.Dimension(1360, 2147483647));
        jPanel_center.setPreferredSize(new java.awt.Dimension(1360, 700));
        jPanel_center.setLayout(new javax.swing.BoxLayout(jPanel_center, javax.swing.BoxLayout.LINE_AXIS));

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(7777, 77777));

        jPanel_Campo_tab.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Campo_tab.setAutoscrolls(true);
        jPanel_Campo_tab.setLayout(new javax.swing.BoxLayout(jPanel_Campo_tab, javax.swing.BoxLayout.PAGE_AXIS));

        jScrollPane3.setMaximumSize(new java.awt.Dimension(32767, 120));
        jScrollPane3.setMinimumSize(new java.awt.Dimension(23, 110));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(4, 120));

        jPanel_Pjs.setMinimumSize(new java.awt.Dimension(2, 119));
        jPanel_Pjs.setPreferredSize(new java.awt.Dimension(593, 1500));
        jPanel_Pjs.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 1, 1));
        jScrollPane3.setViewportView(jPanel_Pjs);

        jPanel_Campo_tab.add(jScrollPane3);

        jPanel_Pnj.setAutoscrolls(true);
        jPanel_Pnj.setPreferredSize(new java.awt.Dimension(253, 424));
        jPanel_Pnj.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 1, 1));
        jScrollPane4.setViewportView(jPanel_Pnj);

        jPanel_Campo_tab.add(jScrollPane4);

        jTabbedPane1.addTab("Campo", jPanel_Campo_tab);

        jPanel_Asaltos_tab.setMaximumSize(new java.awt.Dimension(1360, 700));
        jPanel_Asaltos_tab.setPreferredSize(new java.awt.Dimension(1360, 700));
        jPanel_Asaltos_tab.setLayout(new javax.swing.BoxLayout(jPanel_Asaltos_tab, javax.swing.BoxLayout.PAGE_AXIS));

        jScrollPane_asaltos.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane_asaltos.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane_asaltos.setMaximumSize(new java.awt.Dimension(32767, 700));
        jScrollPane_asaltos.setPreferredSize(new java.awt.Dimension(130, 700));

        jPanel_Asaltos.setMaximumSize(new java.awt.Dimension(2790, 600));
        jPanel_Asaltos.setMinimumSize(new java.awt.Dimension(2590, 600));
        jPanel_Asaltos.setName(""); // NOI18N
        jPanel_Asaltos.setPreferredSize(new java.awt.Dimension(2790, 600));
        jPanel_Asaltos.setLayout(new javax.swing.BoxLayout(jPanel_Asaltos, javax.swing.BoxLayout.LINE_AXIS));

        jPanel_SinAcciones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_SinAcciones.setMaximumSize(new java.awt.Dimension(265, 2000));
        jPanel_SinAcciones.setMinimumSize(new java.awt.Dimension(259, 47));
        jPanel_SinAcciones.setPreferredSize(new java.awt.Dimension(553, 130));
        jPanel_SinAcciones.setRequestFocusEnabled(false);
        jPanel_SinAcciones.setLayout(new javax.swing.BoxLayout(jPanel_SinAcciones, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel_Titulo_SinAcciones.setBackground(new java.awt.Color(255, 204, 204));
        jPanel_Titulo_SinAcciones.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Titulo_SinAcciones.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel_Titulo_SinAcciones.setPreferredSize(new java.awt.Dimension(549, 30));
        jPanel_Titulo_SinAcciones.setLayout(new java.awt.BorderLayout(20, 0));

        jLabel11.setBackground(new java.awt.Color(255, 153, 153));
        jLabel11.setText("Sin Acciones");
        jPanel_Titulo_SinAcciones.add(jLabel11, java.awt.BorderLayout.CENTER);

        jPanel_SinAcciones.add(jPanel_Titulo_SinAcciones);

        jPanel_campo_sinAcciones.setMaximumSize(new java.awt.Dimension(600, 32767));
        jPanel_campo_sinAcciones.setPreferredSize(new java.awt.Dimension(2, 32767));
        jPanel_campo_sinAcciones.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));
        jPanel_SinAcciones_panel.setViewportView(jPanel_campo_sinAcciones);

        jPanel_SinAcciones.add(jPanel_SinAcciones_panel);

        jPanel_Asaltos.add(jPanel_SinAcciones);

        jPanel_CargaSortilegios.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_CargaSortilegios.setMaximumSize(new java.awt.Dimension(265, 2000));
        jPanel_CargaSortilegios.setMinimumSize(new java.awt.Dimension(259, 103));
        jPanel_CargaSortilegios.setRequestFocusEnabled(false);
        jPanel_CargaSortilegios.setLayout(new javax.swing.BoxLayout(jPanel_CargaSortilegios, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel_Titulo_cargaSortilegios.setBackground(new java.awt.Color(204, 204, 255));
        jPanel_Titulo_cargaSortilegios.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Titulo_cargaSortilegios.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel_Titulo_cargaSortilegios.setPreferredSize(new java.awt.Dimension(549, 30));
        jPanel_Titulo_cargaSortilegios.setLayout(new java.awt.BorderLayout(20, 0));

        jLabel3.setText("Carga de Sortilegios");
        jPanel_Titulo_cargaSortilegios.add(jLabel3, java.awt.BorderLayout.WEST);

        jButton_avanzarFaseAsalto1.setText("Siguiente");
        jButton_avanzarFaseAsalto1.setEnabled(false);
        jButton_avanzarFaseAsalto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_avanzarFaseAsalto1ActionPerformed(evt);
            }
        });
        jPanel_Titulo_cargaSortilegios.add(jButton_avanzarFaseAsalto1, java.awt.BorderLayout.CENTER);

        jPanel_CargaSortilegios.add(jPanel_Titulo_cargaSortilegios);

        jPanel_campo_CargaSortilegios.setMaximumSize(new java.awt.Dimension(600, 32767));
        jPanel_campo_CargaSortilegios.setPreferredSize(new java.awt.Dimension(2, 32767));
        jPanel_campo_CargaSortilegios.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));
        jPanel_CargaSortilegios_panel.setViewportView(jPanel_campo_CargaSortilegios);

        jPanel_CargaSortilegios.add(jPanel_CargaSortilegios_panel);

        jPanel_Asaltos.add(jPanel_CargaSortilegios);

        jPanel_RealizaSortilegios.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_RealizaSortilegios.setMaximumSize(new java.awt.Dimension(265, 2000));
        jPanel_RealizaSortilegios.setMinimumSize(new java.awt.Dimension(259, 0));
        jPanel_RealizaSortilegios.setRequestFocusEnabled(false);
        jPanel_RealizaSortilegios.setLayout(new javax.swing.BoxLayout(jPanel_RealizaSortilegios, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel_Titulo_RealizaSortilegios.setBackground(new java.awt.Color(204, 204, 255));
        jPanel_Titulo_RealizaSortilegios.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Titulo_RealizaSortilegios.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel_Titulo_RealizaSortilegios.setPreferredSize(new java.awt.Dimension(549, 30));
        jPanel_Titulo_RealizaSortilegios.setLayout(new java.awt.BorderLayout(20, 0));

        jLabel4.setText("Realizacion de Sortilegios");
        jPanel_Titulo_RealizaSortilegios.add(jLabel4, java.awt.BorderLayout.WEST);

        jButton_avanzarFaseAsalto2.setText("Siguiente");
        jButton_avanzarFaseAsalto2.setEnabled(false);
        jButton_avanzarFaseAsalto2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_avanzarFaseAsalto2ActionPerformed(evt);
            }
        });
        jPanel_Titulo_RealizaSortilegios.add(jButton_avanzarFaseAsalto2, java.awt.BorderLayout.CENTER);

        jPanel_RealizaSortilegios.add(jPanel_Titulo_RealizaSortilegios);

        jPanel_campo_RealizaSortilegios.setMaximumSize(new java.awt.Dimension(600, 32767));
        jPanel_campo_RealizaSortilegios.setPreferredSize(new java.awt.Dimension(2, 32767));
        jPanel_campo_RealizaSortilegios.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));
        jPanel_RealizaSortilegios_panel.setViewportView(jPanel_campo_RealizaSortilegios);

        jPanel_RealizaSortilegios.add(jPanel_RealizaSortilegios_panel);

        jPanel_Asaltos.add(jPanel_RealizaSortilegios);

        jPanel_LanzaProyectiles.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_LanzaProyectiles.setMaximumSize(new java.awt.Dimension(265, 2000));
        jPanel_LanzaProyectiles.setMinimumSize(new java.awt.Dimension(259, 0));
        jPanel_LanzaProyectiles.setRequestFocusEnabled(false);
        jPanel_LanzaProyectiles.setLayout(new javax.swing.BoxLayout(jPanel_LanzaProyectiles, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel_Titulo_DisparaProyectiles.setBackground(new java.awt.Color(204, 204, 255));
        jPanel_Titulo_DisparaProyectiles.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Titulo_DisparaProyectiles.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel_Titulo_DisparaProyectiles.setPreferredSize(new java.awt.Dimension(549, 30));
        jPanel_Titulo_DisparaProyectiles.setLayout(new java.awt.BorderLayout(20, 0));

        jLabel6.setText("Disparo de Proyectiles");
        jPanel_Titulo_DisparaProyectiles.add(jLabel6, java.awt.BorderLayout.WEST);

        jButton_avanzarFaseAsalto3.setText("Siguiente");
        jButton_avanzarFaseAsalto3.setEnabled(false);
        jButton_avanzarFaseAsalto3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_avanzarFaseAsalto3ActionPerformed(evt);
            }
        });
        jPanel_Titulo_DisparaProyectiles.add(jButton_avanzarFaseAsalto3, java.awt.BorderLayout.CENTER);

        jPanel_LanzaProyectiles.add(jPanel_Titulo_DisparaProyectiles);

        jPanel_campo_LanzaProyectiles.setMaximumSize(new java.awt.Dimension(1360, 32767));
        jPanel_campo_LanzaProyectiles.setPreferredSize(new java.awt.Dimension(4, 32767));
        jPanel_campo_LanzaProyectiles.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));
        jPanel_LanzaProyectiles_panel.setViewportView(jPanel_campo_LanzaProyectiles);

        jPanel_LanzaProyectiles.add(jPanel_LanzaProyectiles_panel);

        jPanel_Asaltos.add(jPanel_LanzaProyectiles);

        jPanel_CargaProyectiles.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_CargaProyectiles.setMaximumSize(new java.awt.Dimension(265, 2000));
        jPanel_CargaProyectiles.setMinimumSize(new java.awt.Dimension(259, 0));
        jPanel_CargaProyectiles.setRequestFocusEnabled(false);
        jPanel_CargaProyectiles.setLayout(new javax.swing.BoxLayout(jPanel_CargaProyectiles, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel_Titulo_cargaProyectiles.setBackground(new java.awt.Color(204, 204, 255));
        jPanel_Titulo_cargaProyectiles.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Titulo_cargaProyectiles.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel_Titulo_cargaProyectiles.setPreferredSize(new java.awt.Dimension(549, 30));
        jPanel_Titulo_cargaProyectiles.setLayout(new java.awt.BorderLayout(20, 0));

        jLabel5.setText("Carga de Proyectiles");
        jPanel_Titulo_cargaProyectiles.add(jLabel5, java.awt.BorderLayout.WEST);

        jButton_avanzarFaseAsalto4.setText("Siguiente");
        jButton_avanzarFaseAsalto4.setEnabled(false);
        jButton_avanzarFaseAsalto4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_avanzarFaseAsalto4ActionPerformed(evt);
            }
        });
        jPanel_Titulo_cargaProyectiles.add(jButton_avanzarFaseAsalto4, java.awt.BorderLayout.CENTER);

        jPanel_CargaProyectiles.add(jPanel_Titulo_cargaProyectiles);

        jPanel_campo_CargaProyectiles.setMaximumSize(new java.awt.Dimension(600, 32767));
        jPanel_campo_CargaProyectiles.setPreferredSize(new java.awt.Dimension(2, 32767));
        jPanel_campo_CargaProyectiles.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));
        jPanel_CargaProyectiles_panel.setViewportView(jPanel_campo_CargaProyectiles);

        jPanel_CargaProyectiles.add(jPanel_CargaProyectiles_panel);

        jPanel_Asaltos.add(jPanel_CargaProyectiles);

        jPanel_PararProyectiles.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_PararProyectiles.setMaximumSize(new java.awt.Dimension(265, 2000));
        jPanel_PararProyectiles.setMinimumSize(new java.awt.Dimension(259, 0));
        jPanel_PararProyectiles.setRequestFocusEnabled(false);
        jPanel_PararProyectiles.setLayout(new javax.swing.BoxLayout(jPanel_PararProyectiles, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel_Titulo_PararProyectiles.setBackground(new java.awt.Color(204, 204, 255));
        jPanel_Titulo_PararProyectiles.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Titulo_PararProyectiles.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel_Titulo_PararProyectiles.setPreferredSize(new java.awt.Dimension(549, 30));
        jPanel_Titulo_PararProyectiles.setLayout(new java.awt.BorderLayout(20, 0));

        jLabel12.setText("Parar Proyectiles");
        jPanel_Titulo_PararProyectiles.add(jLabel12, java.awt.BorderLayout.WEST);

        jButton_avanzarFaseAsalto5.setText("Siguiente");
        jButton_avanzarFaseAsalto5.setEnabled(false);
        jButton_avanzarFaseAsalto5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_avanzarFaseAsalto5ActionPerformed(evt);
            }
        });
        jPanel_Titulo_PararProyectiles.add(jButton_avanzarFaseAsalto5, java.awt.BorderLayout.CENTER);

        jPanel_PararProyectiles.add(jPanel_Titulo_PararProyectiles);

        jPanel_campo_PararProyectiles.setMaximumSize(new java.awt.Dimension(600, 32767));
        jPanel_campo_PararProyectiles.setPreferredSize(new java.awt.Dimension(2, 32767));
        jPanel_campo_PararProyectiles.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));
        jPanel_pararProyectil_panel.setViewportView(jPanel_campo_PararProyectiles);

        jPanel_PararProyectiles.add(jPanel_pararProyectil_panel);

        jPanel_Asaltos.add(jPanel_PararProyectiles);

        jPanel_movimientoYmaniobra.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_movimientoYmaniobra.setMaximumSize(new java.awt.Dimension(265, 2000));
        jPanel_movimientoYmaniobra.setMinimumSize(new java.awt.Dimension(259, 0));
        jPanel_movimientoYmaniobra.setRequestFocusEnabled(false);
        jPanel_movimientoYmaniobra.setLayout(new javax.swing.BoxLayout(jPanel_movimientoYmaniobra, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel_Titulo_movimientoYmaniobra.setBackground(new java.awt.Color(204, 204, 255));
        jPanel_Titulo_movimientoYmaniobra.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Titulo_movimientoYmaniobra.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel_Titulo_movimientoYmaniobra.setPreferredSize(new java.awt.Dimension(549, 30));
        jPanel_Titulo_movimientoYmaniobra.setLayout(new java.awt.BorderLayout(20, 0));

        jLabel7.setText("Movimiento y Maniobra");
        jPanel_Titulo_movimientoYmaniobra.add(jLabel7, java.awt.BorderLayout.WEST);

        jButton_avanzarFaseAsalto6.setText("Siguiente");
        jButton_avanzarFaseAsalto6.setEnabled(false);
        jButton_avanzarFaseAsalto6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_avanzarFaseAsalto6ActionPerformed(evt);
            }
        });
        jPanel_Titulo_movimientoYmaniobra.add(jButton_avanzarFaseAsalto6, java.awt.BorderLayout.CENTER);

        jPanel_movimientoYmaniobra.add(jPanel_Titulo_movimientoYmaniobra);

        jPanel_campo_movimientoYmaniobra.setMaximumSize(new java.awt.Dimension(600, 32767));
        jPanel_campo_movimientoYmaniobra.setPreferredSize(new java.awt.Dimension(2, 32767));
        jPanel_campo_movimientoYmaniobra.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));
        jPanel_MovimientoYManiobra_panel.setViewportView(jPanel_campo_movimientoYmaniobra);

        jPanel_movimientoYmaniobra.add(jPanel_MovimientoYManiobra_panel);

        jPanel_Asaltos.add(jPanel_movimientoYmaniobra);

        jPanel_AtaqueCuerpoaCuerpo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_AtaqueCuerpoaCuerpo.setMaximumSize(new java.awt.Dimension(265, 2000));
        jPanel_AtaqueCuerpoaCuerpo.setMinimumSize(new java.awt.Dimension(259, 0));
        jPanel_AtaqueCuerpoaCuerpo.setRequestFocusEnabled(false);
        jPanel_AtaqueCuerpoaCuerpo.setLayout(new javax.swing.BoxLayout(jPanel_AtaqueCuerpoaCuerpo, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel_Titulo_AtaqueCuerpoaCuerpo.setBackground(new java.awt.Color(204, 204, 255));
        jPanel_Titulo_AtaqueCuerpoaCuerpo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Titulo_AtaqueCuerpoaCuerpo.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel_Titulo_AtaqueCuerpoaCuerpo.setPreferredSize(new java.awt.Dimension(549, 30));
        jPanel_Titulo_AtaqueCuerpoaCuerpo.setLayout(new java.awt.BorderLayout(20, 0));

        jLabel8.setText("Ataques Cuerpo a Cuerpo");
        jPanel_Titulo_AtaqueCuerpoaCuerpo.add(jLabel8, java.awt.BorderLayout.WEST);

        jButton_avanzarFaseAsalto7.setText("Siguiente");
        jButton_avanzarFaseAsalto7.setEnabled(false);
        jButton_avanzarFaseAsalto7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_avanzarFaseAsalto7ActionPerformed(evt);
            }
        });
        jPanel_Titulo_AtaqueCuerpoaCuerpo.add(jButton_avanzarFaseAsalto7, java.awt.BorderLayout.CENTER);

        jPanel_AtaqueCuerpoaCuerpo.add(jPanel_Titulo_AtaqueCuerpoaCuerpo);

        jPanel_campo_AtaqueCuerpoaCuerpo.setMaximumSize(new java.awt.Dimension(600, 32767));
        jPanel_campo_AtaqueCuerpoaCuerpo.setPreferredSize(new java.awt.Dimension(2, 32767));
        jPanel_campo_AtaqueCuerpoaCuerpo.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));
        jPanel_AtaqueCuperpoaCuerpo_panel.setViewportView(jPanel_campo_AtaqueCuerpoaCuerpo);

        jPanel_AtaqueCuerpoaCuerpo.add(jPanel_AtaqueCuperpoaCuerpo_panel);

        jPanel_Asaltos.add(jPanel_AtaqueCuerpoaCuerpo);

        jPanel_Movimiento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Movimiento.setMaximumSize(new java.awt.Dimension(265, 2000));
        jPanel_Movimiento.setMinimumSize(new java.awt.Dimension(259, 0));
        jPanel_Movimiento.setRequestFocusEnabled(false);
        jPanel_Movimiento.setLayout(new javax.swing.BoxLayout(jPanel_Movimiento, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel_Titulo_Movimiento.setBackground(new java.awt.Color(204, 204, 255));
        jPanel_Titulo_Movimiento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Titulo_Movimiento.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel_Titulo_Movimiento.setPreferredSize(new java.awt.Dimension(549, 30));
        jPanel_Titulo_Movimiento.setLayout(new java.awt.BorderLayout(20, 0));

        jLabel9.setText("Desplazamiento");
        jPanel_Titulo_Movimiento.add(jLabel9, java.awt.BorderLayout.WEST);

        jButton_avanzarFaseAsalto8.setText("Siguiente");
        jButton_avanzarFaseAsalto8.setEnabled(false);
        jButton_avanzarFaseAsalto8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_avanzarFaseAsalto8ActionPerformed(evt);
            }
        });
        jPanel_Titulo_Movimiento.add(jButton_avanzarFaseAsalto8, java.awt.BorderLayout.CENTER);

        jPanel_Movimiento.add(jPanel_Titulo_Movimiento);

        jPanel_campo_Movimiento.setMaximumSize(new java.awt.Dimension(600, 32767));
        jPanel_campo_Movimiento.setPreferredSize(new java.awt.Dimension(2, 32767));
        jPanel_campo_Movimiento.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));
        jPanel_Movimiento_panel.setViewportView(jPanel_campo_Movimiento);

        jPanel_Movimiento.add(jPanel_Movimiento_panel);

        jPanel_Asaltos.add(jPanel_Movimiento);

        jPanel_MovimientoEstatico.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_MovimientoEstatico.setMaximumSize(new java.awt.Dimension(265, 2000));
        jPanel_MovimientoEstatico.setMinimumSize(new java.awt.Dimension(259, 0));
        jPanel_MovimientoEstatico.setRequestFocusEnabled(false);
        jPanel_MovimientoEstatico.setLayout(new javax.swing.BoxLayout(jPanel_MovimientoEstatico, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel_Titulo_MovimientoEstatico.setBackground(new java.awt.Color(204, 204, 255));
        jPanel_Titulo_MovimientoEstatico.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel_Titulo_MovimientoEstatico.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel_Titulo_MovimientoEstatico.setPreferredSize(new java.awt.Dimension(549, 30));
        jPanel_Titulo_MovimientoEstatico.setLayout(new java.awt.BorderLayout(20, 0));

        jLabel10.setText("Movimiento Estàtico");
        jPanel_Titulo_MovimientoEstatico.add(jLabel10, java.awt.BorderLayout.WEST);

        jButton_avanzarFaseAsalto9.setText("Siguiente");
        jButton_avanzarFaseAsalto9.setEnabled(false);
        jButton_avanzarFaseAsalto9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_avanzarFaseAsalto9ActionPerformed(evt);
            }
        });
        jPanel_Titulo_MovimientoEstatico.add(jButton_avanzarFaseAsalto9, java.awt.BorderLayout.CENTER);

        jPanel_MovimientoEstatico.add(jPanel_Titulo_MovimientoEstatico);

        jPanel_campo_MovimientoEstatico.setMaximumSize(new java.awt.Dimension(600, 32767));
        jPanel_campo_MovimientoEstatico.setPreferredSize(new java.awt.Dimension(2, 32767));
        jPanel_campo_MovimientoEstatico.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));
        jPanel_MovimientoEstatico_panel.setViewportView(jPanel_campo_MovimientoEstatico);

        jPanel_MovimientoEstatico.add(jPanel_MovimientoEstatico_panel);

        jPanel_Asaltos.add(jPanel_MovimientoEstatico);

        jScrollPane_asaltos.setViewportView(jPanel_Asaltos);

        jPanel_Asaltos_tab.add(jScrollPane_asaltos);

        jTabbedPane1.addTab("Asalto", jPanel_Asaltos_tab);

        jPanel_Resumen_tab.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jToggleButton_visibles.setText("Solo Visibles");
        jToggleButton_visibles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_visiblesActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton_visibles);

        jPanel_Resumen_tab.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jEditorPane_cajaDeRegistro.setEditable(false);
        jEditorPane_cajaDeRegistro.setContentType("text/html"); // NOI18N
        jScrollPane1.setViewportView(jEditorPane_cajaDeRegistro);

        jPanel_Resumen_tab.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Resumen", jPanel_Resumen_tab);

        jPanel_center.add(jTabbedPane1);

        jPanel_General.add(jPanel_center, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel_General, java.awt.BorderLayout.CENTER);

        jMenu_File.setText("File");
        jMenu_File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_FileActionPerformed(evt);
            }
        });

        jMenuItem_nuevo.setText("Nuevo");
        jMenuItem_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_nuevoActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_nuevo);

        jMenuItem_Abrir.setText("Abrir...");
        jMenuItem_Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_AbrirActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_Abrir);

        jMenuItem_Guardar.setText("Guardar");
        jMenuItem_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_GuardarActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_Guardar);

        jMenuItem_guardarComo.setText("Guardar Como...");
        jMenuItem_guardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_guardarComoActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_guardarComo);

        jMenuItem_Salir.setText("Salir");
        jMenuItem_Salir.setName("jMISalir"); // NOI18N
        jMenuItem_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SalirActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_Salir);
        jMenuItem_Salir.getAccessibleContext().setAccessibleDescription("");

        jMenuBar1.add(jMenu_File);

        jMenu_Edit.setText("Editar");

        jCheckBoxMenuItem1.setText("Atacar al mismo Lado");
        jCheckBoxMenuItem1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxMenuItem1StateChanged(evt);
            }
        });
        jMenu_Edit.add(jCheckBoxMenuItem1);

        jMenuItem1.setText("Listas de Sortilegios...");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu_Edit.add(jMenuItem1);

        jMenuBar1.add(jMenu_Edit);

        jMenu_help.setText("Ayuda");

        jCheckBoxMenuItem2.setText("Imprimir por Consola");
        jCheckBoxMenuItem2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMenuItem2ItemStateChanged(evt);
            }
        });
        jMenu_help.add(jCheckBoxMenuItem2);

        jMenuBar1.add(jMenu_help);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SalirActionPerformed

    }//GEN-LAST:event_jMenuItem_SalirActionPerformed

    private void jCheckBoxMenuItem1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1StateChanged
        Principal.dosLados = jCheckBoxMenuItem1.isSelected();
    }//GEN-LAST:event_jCheckBoxMenuItem1StateChanged

    private void jCheckBoxMenuItem2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ItemStateChanged
        Recursos.imprimirPorConsola = jCheckBoxMenuItem2.isSelected();
    }//GEN-LAST:event_jCheckBoxMenuItem2ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Token tk = CrearToken.nuevoToken();

        if (tk != null) {
            tk.setVisible(false);
            Accion a = new Accion(Constantes.TIPO_ACCION_SIN_ACCION, 0, 0);
            tk.AgregarAccion(a);
            // Recursos.soldados.add(tk);
            JPanelFormToken_Accion jpfta = new JPanelFormToken_Accion(tk, this);
            jPanel_campo_sinAcciones.add(jpfta);
            aws.add(jpfta);
            this.repaint();

            JPanelFormToken jpft = new JPanelFormToken(tk, this, jpfta);
            jPanel_Pnj.add(jpft);

            campo.agregarToken(tk);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton_crear_pjMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_crear_pjMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_crear_pjMouseClicked

    private void jButton_crear_pjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_crear_pjActionPerformed

        Token tk = CrearToken.nuevoToken();
        if (tk != null) {

            tk.setVisible(true);
            Accion a = new Accion(Constantes.TIPO_ACCION_SIN_ACCION, 0, 0);
            tk.AgregarAccion(a);
            Recursos.soldados.add(tk);
            agregarToken(tk);

            JPanelFormToken_Accion jpfta = new JPanelFormToken_Accion(tk, this);
            JPanelFormToken jpft = new JPanelFormToken(tk, this, jpfta);
            jPanel_Pjs.add(jpft);

            jPanel_campo_sinAcciones.add(jpfta);
            aws.add(jpfta);
            jpft.setVisible(true);
            this.repaint();
        }


    }//GEN-LAST:event_jButton_crear_pjActionPerformed

    private void jButton_comenzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_comenzarActionPerformed
        jTabbedPane1.setSelectedIndex(1);
        avanzarButtonFase(BUTTONFASE_DESARROLLO);
    }//GEN-LAST:event_jButton_comenzarActionPerformed

    private void jButton_definirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_definirActionPerformed
        avanzarButtonFase(BUTTONFASE_DEFINICION);
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton_definirActionPerformed

    private void jButton_terminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_terminarActionPerformed

        avanzarButtonFase(BUTTONFASE_RESULTADOS);
    }//GEN-LAST:event_jButton_terminarActionPerformed

    private void jButton_avanzarFaseAsalto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_avanzarFaseAsalto1ActionPerformed
        actuaronTodos(jButton_avanzarFaseAsalto1);
    }//GEN-LAST:event_jButton_avanzarFaseAsalto1ActionPerformed

    private void jButton_avanzarFaseAsalto2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_avanzarFaseAsalto2ActionPerformed
        actuaronTodos(jButton_avanzarFaseAsalto2);
    }//GEN-LAST:event_jButton_avanzarFaseAsalto2ActionPerformed

    private void jButton_avanzarFaseAsalto3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_avanzarFaseAsalto3ActionPerformed
        actuaronTodos(jButton_avanzarFaseAsalto3);
    }//GEN-LAST:event_jButton_avanzarFaseAsalto3ActionPerformed

    private void jButton_avanzarFaseAsalto4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_avanzarFaseAsalto4ActionPerformed
        actuaronTodos(jButton_avanzarFaseAsalto4);
    }//GEN-LAST:event_jButton_avanzarFaseAsalto4ActionPerformed

    private void jButton_avanzarFaseAsalto5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_avanzarFaseAsalto5ActionPerformed
        actuaronTodos(jButton_avanzarFaseAsalto5);
    }//GEN-LAST:event_jButton_avanzarFaseAsalto5ActionPerformed

    private void jButton_avanzarFaseAsalto6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_avanzarFaseAsalto6ActionPerformed
        actuaronTodos(jButton_avanzarFaseAsalto6);
    }//GEN-LAST:event_jButton_avanzarFaseAsalto6ActionPerformed

    private void jButton_avanzarFaseAsalto7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_avanzarFaseAsalto7ActionPerformed
        actuaronTodos(jButton_avanzarFaseAsalto7);
    }//GEN-LAST:event_jButton_avanzarFaseAsalto7ActionPerformed

    private void jButton_avanzarFaseAsalto8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_avanzarFaseAsalto8ActionPerformed
        actuaronTodos(jButton_avanzarFaseAsalto8);
    }//GEN-LAST:event_jButton_avanzarFaseAsalto8ActionPerformed

    private void jButton_avanzarFaseAsalto9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_avanzarFaseAsalto9ActionPerformed
        actuaronTodos(jButton_avanzarFaseAsalto9);
    }//GEN-LAST:event_jButton_avanzarFaseAsalto9ActionPerformed

    private void jMenu_FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_FileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu_FileActionPerformed

    private void jMenuItem_AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_AbrirActionPerformed
        if (campo.getTokens().size() > 0) {
            int confirmado = JOptionPane.showConfirmDialog(
                    this,
                    "Vas a Cerrar el Campo de batalla Actual y de no haber guardado se perderan los cambios\n"
                    + "¿Estas de Acuerdo?");

            if (JOptionPane.OK_OPTION == confirmado) //cerrartodo();
            {
                closeCampoDeBatalla();
                abrirArchivo();
            }
        } else {
            abrirArchivo();
        }

    }//GEN-LAST:event_jMenuItem_AbrirActionPerformed

    private void jMenuItem_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_GuardarActionPerformed
        // ActualizaUnidades();

        try {
            ag.GuardarFieldXML(campo);

        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

        //AbrirGuardar.guardarCdg(campo);
    }//GEN-LAST:event_jMenuItem_GuardarActionPerformed

    private void jMenuItem_guardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_guardarComoActionPerformed
        try {
            ag.GuardarComoFieldXML(campo);
            this.setTitle(TITULO + " - " + ag.getName());
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem_guardarComoActionPerformed

    private void jMenuItem_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_nuevoActionPerformed
        if (campo.getTokens().size() > 0) {
            int confirmado = JOptionPane.showConfirmDialog(
                    this,
                    "Vas a Cerrar el Campo de batalla Actual y de no haber guardado se perderan los cambios\n"
                    + "¿Estas de Acuerdo?");
            if (JOptionPane.OK_OPTION == confirmado) {
                closeCampoDeBatalla();
            }
        } else {
            closeCampoDeBatalla();
        }
    }//GEN-LAST:event_jMenuItem_nuevoActionPerformed

    private void jToggleButton_visiblesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_visiblesActionPerformed
        if (jToggleButton_visibles.isSelected()) {
            jToggleButton_visibles.setText("Solo Visibles");
        } else {
            jToggleButton_visibles.setText("Todos los eventos");
        }
        publicarTodosLosEventos();
    }//GEN-LAST:event_jToggleButton_visiblesActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        AdministrarListasSortilegios adm = new AdministrarListasSortilegios(this, true);
        adm.setLocationRelativeTo(null);
        adm.setVisible(true);
        guardarConfig(dataRecursos);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void actuaronTodos(JButton jb) {
        JScrollPane jsp = (JScrollPane) jb.getParent().getParent().getComponent(1);
        JPanel jp = (JPanel) jsp.getViewport().getComponent(0);
        if (todosActuaron(jp)) {
            avanzarFaseDeAsalto(-1);
        } else {
            JOptionPane.showMessageDialog(this, "Aún hay personajes sin actuar");
        }
    }

    public ArrayList<Token> getTodosLosEnemigos(Token token) {
        ArrayList<Token> lista = new ArrayList<>();
        for (int i = 0; i < aws.size(); i++) {
            Token actual = aws.get(i).getToken();
            if (!actual.equals(token) && (actual.isVisible() != token.isVisible())) {
                lista.add(actual);
            }
        }
        return lista;
    }

    public void abrirArchivo() {
        CampoDeBatalla field = null;

        try {
            field = (CampoDeBatalla) ag.AbrirFieldXML();
            //field = AbrirGuardar.cargarCDG();
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (field != null) {
            this.campo = field;
            loadCampoDeBatalla();
            this.setTitle(TITULO + " - " + ag.getName());
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                CargaBase.iniciarTodo();
                new Principal().setVisible(true);

            }
        });

    }

    private void loadCampoDeBatalla() {

        jTextField_asalto.setText("" + campo.getnAsalto());

        LoadingProcess lp = new LoadingProcess(this);
        lp.start();
        /*
        for (Iterator iterator = campo.getTokens().iterator(); iterator.hasNext();) {

            Token next = (Token) iterator.next();
            JPanelFormToken_Accion jpa = new JPanelFormToken_Accion(next, this);
            aws.add(jpa);
            moverAccion(jpa, jpa.getAccion().getTipo());
            JPanelFormToken jpft = new JPanelFormToken(jpa.getToken(), this,jpa);
            if (next.isVisible()) {
                jPanel_Pjs.add(jpft);
            } else {
                jPanel_Pnj.add(jpft);
            }
        }
         */
        deshechoTodos();
        moverTodos();
        publicarTodosLosEventos();
        jPanel_Asaltos.repaint();
        this.repaint();
    }

    private void closeCampoDeBatalla() {
        this.setTitle(TITULO);
        jPanel_Pjs.removeAll();
        jPanel_Pnj.removeAll();
        campo.getTokens().clear();
        removerTodasLasAcciones();
        this.repaint();
    }

    public void removerTodasLasAcciones() {
        jPanel_campo_sinAcciones.removeAll();
        jPanel_campo_CargaSortilegios.removeAll();
        jPanel_campo_RealizaSortilegios.removeAll();
        jPanel_campo_LanzaProyectiles.removeAll();
        jPanel_campo_CargaProyectiles.removeAll();
        jPanel_campo_PararProyectiles.removeAll();
        jPanel_campo_movimientoYmaniobra.removeAll();
        jPanel_campo_AtaqueCuerpoaCuerpo.removeAll();
        jPanel_campo_Movimiento.removeAll();
        jPanel_campo_MovimientoEstatico.removeAll();
        jPanel_campo_CargaSortilegios.removeAll();
    }

    public void moverAccion(JPanelFormToken_Accion tokenAccion, int destino) {
        tokenAccion.setVisible(false);
        if (tokenAccion.isShowing()) {
            tokenAccion.getParent().remove(tokenAccion);
        }

        switch (destino) {
            case Constantes.TIPO_ACCION_SIN_ACCION: {
                jPanel_campo_sinAcciones.add(tokenAccion);
                break;
            }
            case Constantes.TIPO_ACCION_CARGA_SORTILEGIO: {
                jPanel_campo_CargaSortilegios.add(tokenAccion);
                break;
            }
            case Constantes.TIPO_ACCION_REALIZA_SORTILEGIO: {
                jPanel_campo_RealizaSortilegios.add(tokenAccion);
                break;
            }
            case Constantes.TIPO_ACCION_DISPARA_PROYECTIL: {
                jPanel_campo_LanzaProyectiles.add(tokenAccion);
                break;
            }
            case Constantes.TIPO_ACCION_CARGA_PROYECTIL: {
                jPanel_campo_CargaProyectiles.add(tokenAccion);
                break;
            }
            case Constantes.TIPO_ACCION_PARAR_PROYECTIL: {
                jPanel_campo_PararProyectiles.add(tokenAccion);
                break;
            }
            case Constantes.TIPO_ACCION_MOVIMIENTO_Y_MANIOBRA: {
                jPanel_campo_movimientoYmaniobra.add(tokenAccion);
                break;
            }
            case Constantes.TIPO_ACCION_ATAQUE_CUERPO_A_CUERPO: {
                jPanel_campo_AtaqueCuerpoaCuerpo.add(tokenAccion);
                break;
            }
            case Constantes.TIPO_ACCION_DESPLAZAMIENTO: {
                jPanel_campo_Movimiento.add(tokenAccion);
                break;
            }
            case Constantes.TIPO_ACCION_MOVIMIENTO_ESTATICO: {
                jPanel_campo_MovimientoEstatico.add(tokenAccion);
                break;
            }
            default: {
                jPanel_campo_CargaSortilegios.add(tokenAccion);
                break;
            }
        }
        tokenAccion.setVisible(true);
        this.repaint();

    }

    public void avanzarButtonFase(int fase) {
        fase = (fase == -1) ? butonFase + 1 : fase;
        butonFase = fase;

        switch (fase) {
            case BUTTONFASE_DEFINICION: {
                jPanel_barra_acciones.setBackground(new Color(252, 241, 138));
                jButton_crear_pj.setEnabled(false);
                jButton_definir.setEnabled(false);
                jButton_comenzar.setEnabled(true);
                jButton_terminar.setEnabled(false);
                jLabel_uso_ao.setVisible(false);
                jScrollPane_asaltos.getHorizontalScrollBar().setValue(0);
                reiniciarSeleccionAccion();
                //avanzarFaseDeAsalto(0);
                break;
            }
            case BUTTONFASE_DESARROLLO: {
                if (!verificarAturdidos()) {
                    butonFase--;
                } else {
                    todosSeleccionAccion();
                    jPanel_barra_acciones.setBackground(new Color(179, 252, 138));
                    sinAccioneshechos(jPanel_campo_sinAcciones);
                    repetirAccion();
                    jLabel_uso_ao.setVisible(true);
                    jButton_definir.setEnabled(false);
                    jButton_comenzar.setEnabled(false);
                    jButton_terminar.setEnabled(true);

                    publicarEvento(creaEvento(Recursos.evtAsaltoNuevo(campo.getnAsalto())));
                    reordenarAcciones();
                    avanzarFaseDeAsalto(ASALTOFASE_CARGA_SORTILEGIO);
                }
                break;
            }
            case BUTTONFASE_RESULTADOS: {

                jPanel_barra_acciones.setBackground(new java.awt.Color(204, 255, 204));
                jLabel_uso_ao.setVisible(false);

                jButton_definir.setEnabled(true);
                jButton_comenzar.setEnabled(false);
                jButton_terminar.setEnabled(false);
                jButton_crear_pj.setEnabled(true);

                jButton_avanzarFaseAsalto1.setEnabled(false);
                jPanel_Titulo_cargaSortilegios.setBackground(new java.awt.Color(204, 204, 255));
                jButton_avanzarFaseAsalto2.setEnabled(false);
                jPanel_Titulo_RealizaSortilegios.setBackground(new java.awt.Color(204, 204, 255));
                jButton_avanzarFaseAsalto3.setEnabled(false);
                jPanel_Titulo_DisparaProyectiles.setBackground(new java.awt.Color(204, 204, 255));
                jButton_avanzarFaseAsalto4.setEnabled(false);
                jPanel_Titulo_cargaProyectiles.setBackground(new java.awt.Color(204, 204, 255));
                jButton_avanzarFaseAsalto5.setEnabled(false);
                jPanel_Titulo_PararProyectiles.setBackground(new java.awt.Color(204, 204, 255));
                jButton_avanzarFaseAsalto6.setEnabled(false);
                jPanel_Titulo_movimientoYmaniobra.setBackground(new java.awt.Color(204, 204, 255));
                jButton_avanzarFaseAsalto7.setEnabled(false);
                jPanel_Titulo_AtaqueCuerpoaCuerpo.setBackground(new java.awt.Color(204, 204, 255));
                jButton_avanzarFaseAsalto8.setEnabled(false);
                jPanel_Titulo_Movimiento.setBackground(new java.awt.Color(204, 204, 255));
                jButton_avanzarFaseAsalto9.setEnabled(false);
                jPanel_Titulo_MovimientoEstatico.setBackground(new java.awt.Color(204, 204, 255));
                jPanel_Titulo_SinAcciones.setBackground(Color.red);

                jButton_avanzarFaseAsalto1.setEnabled(false);

                jPanel_Titulo_SinAcciones.setBackground(new java.awt.Color(204, 204, 255));

                String str = Recursos.evtFinDeAsalto();

                Evento evto = new Evento(str);

                publicarEvento(evto);
                publicarEvento(creaEvento(Recursos.evtAsaltoNuevo(campo.getnAsalto())));

                deshechoTodos();
                avanzarButtonFase(BUTTONFASE_CREACION);
                break;
            }
            case BUTTONFASE_CREACION: {

                int nuevoAsalto = campo.resolverAsalto();
                jTextField_asalto.setText("" + nuevoAsalto);
                break;
            }

        }
        this.repaint();
    }

    public int faseActual() {
        return butonFase;
    }

    public int asaltoFaseActual() {
        return asaltoFase;
    }

    private void avanzarFaseDeAsalto(int pos) {
        pos = (pos == -1) ? asaltoFase + 1 : pos;
        if (pos > ASALTOFASE_MOVIMIENTO_ESTATICO) {
            int r = JOptionPane.showConfirmDialog(this, "Terminar el asalto?");
            if (JOptionPane.OK_OPTION == r) {
                avanzarButtonFase(BUTTONFASE_RESULTADOS);
            } else {
                pos = ASALTOFASE_CARGA_SORTILEGIO;
            }

        }
        jScrollPane_asaltos.getHorizontalScrollBar().setValue(278 * pos);

        asaltoFase = pos;

        switch (pos) {
            case ASALTOFASE_CARGA_SORTILEGIO: {

                jButton_avanzarFaseAsalto9.setEnabled(false);
                jButton_avanzarFaseAsalto1.setEnabled(true);
                jPanel_Titulo_cargaSortilegios.setBackground(Color.red);
                jPanel_Titulo_SinAcciones.setBackground(new java.awt.Color(204, 204, 255));
                jPanel_Titulo_MovimientoEstatico.setBackground(new java.awt.Color(204, 204, 255));
                if (jPanel_campo_CargaSortilegios.getComponentCount() == 0) {
                    avanzarFaseDeAsalto(-1);
                }

                break;
            }
            case ASALTOFASE_REALIZA_SORTILEGIO: {

                jButton_avanzarFaseAsalto1.setEnabled(false);
                jButton_avanzarFaseAsalto2.setEnabled(true);
                jPanel_Titulo_RealizaSortilegios.setBackground(Color.red);
                jPanel_Titulo_cargaSortilegios.setBackground(new java.awt.Color(204, 204, 255));

                if (jPanel_campo_RealizaSortilegios.getComponentCount() == 0) {
                    avanzarFaseDeAsalto(-1);
                } else {
                    publicarEvento(new Evento("<br/>--------------<br/>", campo.getnAsalto(), true));
                }

                break;
            }
            case ASALTOFASE_DISPARA_PROYECTIL: {

                jButton_avanzarFaseAsalto2.setEnabled(false);
                jButton_avanzarFaseAsalto3.setEnabled(true);
                jPanel_Titulo_DisparaProyectiles.setBackground(Color.red);
                jPanel_Titulo_RealizaSortilegios.setBackground(new java.awt.Color(204, 204, 255));

                if (jPanel_campo_LanzaProyectiles.getComponentCount() == 0) {
                    avanzarFaseDeAsalto(-1);
                } else {
                    publicarEvento(new Evento("<br/>--------------<br/>", campo.getnAsalto(), true));
                }

                break;
            }
            case ASALTOFASE_CARGA_PROYECTIL: {

                jButton_avanzarFaseAsalto3.setEnabled(false);
                jButton_avanzarFaseAsalto4.setEnabled(true);
                jPanel_Titulo_cargaProyectiles.setBackground(Color.red);
                jPanel_Titulo_DisparaProyectiles.setBackground(new java.awt.Color(204, 204, 255));

                if (jPanel_campo_CargaProyectiles.getComponentCount() == 0) {
                    avanzarFaseDeAsalto(-1);
                } else {
                    publicarEvento(new Evento("<br/>--------------<br/>", campo.getnAsalto(), true));
                }

                break;
            }
            case ASALTOFASE_PARAR_PROYECTIL: {

                jButton_avanzarFaseAsalto4.setEnabled(false);
                jButton_avanzarFaseAsalto5.setEnabled(true);
                jPanel_Titulo_PararProyectiles.setBackground(Color.red);
                jPanel_Titulo_cargaProyectiles.setBackground(new java.awt.Color(204, 204, 255));

                if (jPanel_campo_PararProyectiles.getComponentCount() == 0) {
                    avanzarFaseDeAsalto(-1);
                } else {
                    publicarEvento(new Evento("<br/>--------------<br/>", campo.getnAsalto(), true));
                }

                break;
            }
            case ASALTOFASE_MOVIMIENTO_Y_MANIOBRA: {

                jButton_avanzarFaseAsalto5.setEnabled(false);
                jButton_avanzarFaseAsalto6.setEnabled(true);
                jPanel_Titulo_movimientoYmaniobra.setBackground(Color.red);
                jPanel_Titulo_PararProyectiles.setBackground(new java.awt.Color(204, 204, 255));

                if (jPanel_campo_movimientoYmaniobra.getComponentCount() == 0) {
                    avanzarFaseDeAsalto(-1);
                } else {
                    publicarEvento(new Evento("<br/>--------------<br/>", campo.getnAsalto(), true));
                }

                break;
            }
            case ASALTOFASE_ATAQUE_CUERPO_A_CUERPO: {

                jButton_avanzarFaseAsalto6.setEnabled(false);
                jButton_avanzarFaseAsalto7.setEnabled(true);
                jPanel_Titulo_AtaqueCuerpoaCuerpo.setBackground(Color.red);
                jPanel_Titulo_movimientoYmaniobra.setBackground(new java.awt.Color(204, 204, 255));

                if (jPanel_campo_AtaqueCuerpoaCuerpo.getComponentCount() == 0) {
                    avanzarFaseDeAsalto(-1);
                } else {
                    publicarEvento(new Evento("<br/>--------------<br/>", campo.getnAsalto(), true));
                }

                break;
            }
            case ASALTOFASE_DESPLAZAMIENTO: {

                jButton_avanzarFaseAsalto7.setEnabled(false);
                jButton_avanzarFaseAsalto8.setEnabled(true);
                jPanel_Titulo_Movimiento.setBackground(Color.red);
                jPanel_Titulo_AtaqueCuerpoaCuerpo.setBackground(new java.awt.Color(204, 204, 255));

                if (jPanel_campo_Movimiento.getComponentCount() == 0) {
                    avanzarFaseDeAsalto(-1);
                } else {
                    publicarEvento(new Evento("<br/>--------------<br/>", campo.getnAsalto(), true));
                }

                break;
            }
            case ASALTOFASE_MOVIMIENTO_ESTATICO: {

                jButton_avanzarFaseAsalto8.setEnabled(false);
                jButton_avanzarFaseAsalto9.setEnabled(true);
                jPanel_Titulo_MovimientoEstatico.setBackground(Color.red);
                jPanel_Titulo_Movimiento.setBackground(new java.awt.Color(204, 204, 255));

                if (jPanel_campo_MovimientoEstatico.getComponentCount() == 0) {
                    avanzarFaseDeAsalto(-1);
                } else {
                    publicarEvento(new Evento("<br/>--------------<br/>", campo.getnAsalto(), true));
                }

                break;
            }
            case ASALTOFASE_SINACCION: {

                jButton_avanzarFaseAsalto9.setEnabled(false);
                jButton_avanzarFaseAsalto1.setEnabled(true);
                jPanel_Titulo_SinAcciones.setBackground(Color.red);
                jPanel_Titulo_MovimientoEstatico.setBackground(new java.awt.Color(204, 204, 255));

                resolverTokens();

                break;
            }
            default: {
                asaltoFase = ASALTOFASE_SINACCION;

                jButton_avanzarFaseAsalto1.setEnabled(false);

                jPanel_Titulo_SinAcciones.setBackground(Color.red);
                jPanel_Titulo_SinAcciones.setBackground(new java.awt.Color(204, 204, 255));
                resolverTokens();

                break;
            }
        }

        this.repaint();
    }

    public void sinAccioneshechos(JPanel jp) {
        for (int i = 0; i < jp.getComponentCount(); i++) {
            JPanelFormToken_Accion jpta = (JPanelFormToken_Accion) jp.getComponent(i);
            if (jpta.isActivo()) {
                jpta.hecho();
            }
        }

    }

    public boolean todosActuaron(JPanel jp) {
        for (int i = 0; i < jp.getComponentCount(); i++) {
            JPanelFormToken_Accion jpta = (JPanelFormToken_Accion) jp.getComponent(i);

            if (jpta.isActivo()) {
                if (!jpta.getAccion().isDone()) {
                    if (!jpta.getAccion().isAccionDeOportunidad()) {
                        return false;
                    }
                }
            }
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_avanzarFaseAsalto1;
    private javax.swing.JButton jButton_avanzarFaseAsalto2;
    private javax.swing.JButton jButton_avanzarFaseAsalto3;
    private javax.swing.JButton jButton_avanzarFaseAsalto4;
    private javax.swing.JButton jButton_avanzarFaseAsalto5;
    private javax.swing.JButton jButton_avanzarFaseAsalto6;
    private javax.swing.JButton jButton_avanzarFaseAsalto7;
    private javax.swing.JButton jButton_avanzarFaseAsalto8;
    private javax.swing.JButton jButton_avanzarFaseAsalto9;
    private javax.swing.JButton jButton_comenzar;
    private javax.swing.JButton jButton_crear_pj;
    private javax.swing.JButton jButton_definir;
    private javax.swing.JButton jButton_terminar;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JTextPane jEditorPane_cajaDeRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_uso_ao;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem_Abrir;
    private javax.swing.JMenuItem jMenuItem_Guardar;
    private javax.swing.JMenuItem jMenuItem_Salir;
    private javax.swing.JMenuItem jMenuItem_guardarComo;
    private javax.swing.JMenuItem jMenuItem_nuevo;
    private javax.swing.JMenu jMenu_Edit;
    private javax.swing.JMenu jMenu_File;
    private javax.swing.JMenu jMenu_help;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel_Acciones;
    private javax.swing.JPanel jPanel_Asaltos;
    private javax.swing.JPanel jPanel_Asaltos_tab;
    private javax.swing.JPanel jPanel_AtaqueCuerpoaCuerpo;
    private javax.swing.JScrollPane jPanel_AtaqueCuperpoaCuerpo_panel;
    private javax.swing.JPanel jPanel_Campo_tab;
    private javax.swing.JPanel jPanel_CargaProyectiles;
    private javax.swing.JScrollPane jPanel_CargaProyectiles_panel;
    private javax.swing.JPanel jPanel_CargaSortilegios;
    private javax.swing.JScrollPane jPanel_CargaSortilegios_panel;
    private javax.swing.JPanel jPanel_General;
    private javax.swing.JPanel jPanel_LanzaProyectiles;
    private javax.swing.JScrollPane jPanel_LanzaProyectiles_panel;
    private javax.swing.JPanel jPanel_Movimiento;
    private javax.swing.JPanel jPanel_MovimientoEstatico;
    private javax.swing.JScrollPane jPanel_MovimientoEstatico_panel;
    private javax.swing.JScrollPane jPanel_MovimientoYManiobra_panel;
    private javax.swing.JScrollPane jPanel_Movimiento_panel;
    private javax.swing.JPanel jPanel_PararProyectiles;
    public javax.swing.JPanel jPanel_Pjs;
    public javax.swing.JPanel jPanel_Pnj;
    private javax.swing.JPanel jPanel_RealizaSortilegios;
    private javax.swing.JScrollPane jPanel_RealizaSortilegios_panel;
    private javax.swing.JPanel jPanel_Resumen_tab;
    private javax.swing.JPanel jPanel_SinAcciones;
    private javax.swing.JScrollPane jPanel_SinAcciones_panel;
    private javax.swing.JPanel jPanel_Titulo_AtaqueCuerpoaCuerpo;
    private javax.swing.JPanel jPanel_Titulo_DisparaProyectiles;
    private javax.swing.JPanel jPanel_Titulo_Movimiento;
    private javax.swing.JPanel jPanel_Titulo_MovimientoEstatico;
    private javax.swing.JPanel jPanel_Titulo_PararProyectiles;
    private javax.swing.JPanel jPanel_Titulo_RealizaSortilegios;
    private javax.swing.JPanel jPanel_Titulo_SinAcciones;
    private javax.swing.JPanel jPanel_Titulo_cargaProyectiles;
    private javax.swing.JPanel jPanel_Titulo_cargaSortilegios;
    private javax.swing.JPanel jPanel_Titulo_movimientoYmaniobra;
    private javax.swing.JPanel jPanel_barra_acciones;
    private javax.swing.JPanel jPanel_campo_AtaqueCuerpoaCuerpo;
    private javax.swing.JPanel jPanel_campo_CargaProyectiles;
    private javax.swing.JPanel jPanel_campo_CargaSortilegios;
    private javax.swing.JPanel jPanel_campo_LanzaProyectiles;
    private javax.swing.JPanel jPanel_campo_Movimiento;
    private javax.swing.JPanel jPanel_campo_MovimientoEstatico;
    private javax.swing.JPanel jPanel_campo_PararProyectiles;
    private javax.swing.JPanel jPanel_campo_RealizaSortilegios;
    private javax.swing.JPanel jPanel_campo_movimientoYmaniobra;
    private javax.swing.JPanel jPanel_campo_sinAcciones;
    private javax.swing.JPanel jPanel_center;
    private javax.swing.JPanel jPanel_movimientoYmaniobra;
    private javax.swing.JScrollPane jPanel_pararProyectil_panel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane_asaltos;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField_asalto;
    private javax.swing.JToggleButton jToggleButton_visibles;
    // End of variables declaration//GEN-END:variables

    static public boolean dosLados = false;
    static public javax.swing.JFrame ventana;
    public int butonFase = 0;
    public int asaltoFase = 0;
    public CampoDeBatalla campo;
    public ArrayList<JPanelFormToken_Accion> aws;
    private AbrirGuardar ag;
    public static DataRecursos dataRecursos;
    public static final String TITULO = "Super Rolmaster Battle";
    private JPanel jloading;

    private StringBuilder registro;

    public static final int BUTTONFASE_CREACION = 0;
    public static final int BUTTONFASE_DEFINICION = 1;
    public static final int BUTTONFASE_DESARROLLO = 2;
    public static final int BUTTONFASE_RESULTADOS = 3;

    public static final int ASALTOFASE_SINACCION = 0;
    public static final int ASALTOFASE_CARGA_SORTILEGIO = 1;
    public static final int ASALTOFASE_REALIZA_SORTILEGIO = 2;
    public static final int ASALTOFASE_DISPARA_PROYECTIL = 3;
    public static final int ASALTOFASE_CARGA_PROYECTIL = 4;
    public static final int ASALTOFASE_PARAR_PROYECTIL = 5;
    public static final int ASALTOFASE_MOVIMIENTO_Y_MANIOBRA = 6;
    public static final int ASALTOFASE_ATAQUE_CUERPO_A_CUERPO = 7;
    public static final int ASALTOFASE_DESPLAZAMIENTO = 8;
    public static final int ASALTOFASE_MOVIMIENTO_ESTATICO = 9;

    private void resolverTokens() {
        System.out.println("aun no hace nada");
    }

    public Evento creaEvento(String mje) {
        int nasalto = campo.getnAsalto();
        return new Evento(mje, nasalto, true);
    }

    public void publicarEvento(Evento evt) {
        if (evt.noTieneAsalto()) {
            evt.setAsalto(campo.getnAsalto());
        }
        campo.guardarEvento(evt);
        registro.append(evt.getDesc());
        jEditorPane_cajaDeRegistro.setText(registro.toString());
    }

    public void publicarTodosLosEventos() {
        jEditorPane_cajaDeRegistro.removeAll();
        for (int i = 0; i < campo.getEventos().size(); i++) {
            Evento e = campo.getEventos().get(i);
            if (e.isVisible() || jToggleButton_visibles.isSelected()) {
                registro.append(e.getDesc());
                jEditorPane_cajaDeRegistro.setText(registro.toString());
            }
        }

    }

    public static ArrayList<Sortilegio> getTodosLosSortilegios() {
        return new ArrayList<Sortilegio>(dataRecursos.getSortilegiosSueltos().values());
    }

    public static ArrayList<ListaDeSortilegios> getTodasLasListasDeSortilegios() {
        return new ArrayList<ListaDeSortilegios>(dataRecursos.getListasDeSortilegios().values());
    }

    public static ArrayList<ListaDeSortilegios> getTodasLasListasDeSortilegiosAbiertas(int dominio) {

        ArrayList<ListaDeSortilegios> lista = new ArrayList<ListaDeSortilegios>();

        for (ListaDeSortilegios lds : Principal.getTodasLasListasDeSortilegios()) {
            if (lds.getDominio() == dominio) {
                lista.add(lds);
            }
        }
        //jComboBox_profesion.setModel(new DefaultComboBoxModel(profesiones.toArray()));
        return lista;
    }

    public static ArrayList<ListaDeSortilegios> getTodasLasListasDeSortilegiosBasicasDeProfesion(String profesion) {

        ArrayList<ListaDeSortilegios> lista = new ArrayList<ListaDeSortilegios>();

        for (ListaDeSortilegios lds : Principal.getTodasLasListasDeSortilegios()) {
            if (lds.getTipo_lista() == ListaDeSortilegios.TIPO_LISTA_BASICA_PROFESION && lds.getProfesion() == profesion) {
                lista.add(lds);
            }
        }
        //jComboBox_profesion.setModel(new DefaultComboBoxModel(profesiones.toArray()));
        return lista;
    }

    public static Sortilegio getSortielgio(int i) {
        return dataRecursos.getSortilegiosSueltos().get(i);
    }

    public static int crearSortilegioNuevo(Sortilegio s) {
        int ni = dataRecursos.getSortilegiosSueltos().size();
        s.setId(ni);
        dataRecursos.getSortilegiosSueltos().put(ni, s);
        guardarConfig(dataRecursos);
        return ni;
    }

    public static void crearListaDeSortilegiosNueva(ListaDeSortilegios lds) {
        int ni = dataRecursos.getListasDeSortilegios().size();
        lds.setId(ni);
        dataRecursos.getListasDeSortilegios().put(ni, lds);
        guardarConfig(dataRecursos);
    }

    public int getAsaltoActual() {
        return campo.getnAsalto();
    }

    public void deshechoTodos() {
        for (int i = 0; i < aws.size(); i++) {

            JPanelFormToken_Accion next = aws.get(i);
            if (next.isActivo()) {
                next.desHecho();
            }
        }

    }

    private void reiniciarSeleccionAccion() {
        for (int i = 0; i < aws.size(); i++) {
            JPanelFormToken_Accion jpta = aws.get(i);
            if (jpta.isActivo()) {
                if (jpta.getToken().puedeActuar()) {
                    jpta.sinAccionDefinidaEnEsteAsalto();
                }
            }
        }
    }

    private void todosSeleccionAccion() {
        for (int i = 0; i < aws.size(); i++) {
            JPanelFormToken_Accion jpta = aws.get(i);
            if (jpta.isActivo()) {
                jpta.AccionDefinidaEnEsteAsalto();
            }
        }
    }

    private boolean verificarAturdidos() {
        boolean re = true;
        String pjs = "";
        for (int i = 0; i < aws.size(); i++) {
            JPanelFormToken_Accion jpta = aws.get(i);
            if (jpta.isActivo()) {
                if (jpta.getToken().getEstado().isAturdido() && !Accion.isRealizableAturdido(jpta.getTipoDeAccion())) {
                    jpta.clickAccion(false, false, false);
                    pjs += "> " + jpta.getToken().getNombre();
                    re = false;
                }
            }
        }
        Recursos.informar("Hay personajes Aturdidos que no pueden realizar las acciones Actualmente definidas\n" + pjs);
        return re;
    }

    private void moverTodos() {

        for (int i = 0; i < aws.size(); i++) {
            JPanelFormToken_Accion jpta = aws.get(i);
            moverAccion(jpta, jpta.getToken().getLastAction().getTipo());
        }

    }

    public void showLoading(boolean mostrar) {
        //jTabbedPane1.setVisible(!mostrar);
        //jloading = new JPanel(new BorderLayout());
        //jPanel_center.add(jloading,BorderLayout.CENTER);
        //jloading.setVisible(mostrar);
        if (mostrar) {

            String path = "Data\\loading\\" + Recursos.aleatorioEntre(1, 6) + ".gif";
            ImageIcon icon = new ImageIcon(path);
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(icon.getIconWidth(), icon.getIconHeight(), Image.SCALE_DEFAULT));
            JLabel jl = new JLabel(icon);
        } else {
            //jPanel_center.remove(jloading);
        }

        //jPanel_center.repaint();
    }

    private void repetirAccion() {
        for (int i = 0; i < aws.size(); i++) {
            JPanelFormToken_Accion jpta = aws.get(i);
            if (jpta.isActivo()) {
                if (jpta.getToken().getLastAction().getNro_Asalto() != campo.getnAsalto()) {
                    jpta.getToken().AgregarAccion(jpta.getToken().getLastAction());
                    jpta.getToken().getLastAction().desHecho();
                    jpta.getToken().getLastAction().setCambioDeAccion(false);
                    jpta.getToken().getLastAction().setNro_Asalto(campo.getnAsalto());
                }
            }
        }
    }

    private void modoPrueba() {

    }

    public void agregarToken(Token tk) {
        if (campo.getTokens().contains(tk)) {
            campo.getTokens().remove(tk);
        }
        campo.agregarToken(tk);

    }

    public void reordenarAcciones() {
        removerTodasLasAcciones();
        Collections.sort(aws, new Comparator() {
            @Override
            public int compare(Object o1, Object o2) {
                return ((JPanelFormToken_Accion) o2).compareTo((JPanelFormToken_Accion) o1);
            }
        });
        for (int i = 0; i < aws.size(); i++) {

            JPanelFormToken_Accion jpta = aws.get(i);
            if (jpta.isActivo()) {
                moverAccion(jpta, jpta.getAccion().getTipo());
            }
        }
    }

    public void cambiarAAsaltopanel(JPanelFormToken_Accion jpa) {

        boolean enc = false;
        int vert = jpa.getSize().height;
        if (jpa.isActivo()) {
            int tipo_acc = jpa.getAccion().getTipo();
            jScrollPane_asaltos.getHorizontalScrollBar().setValue(278 * tipo_acc);

            if (tipo_acc == ASALTOFASE_SINACCION) {
                for (int j = 0; j < jPanel_campo_sinAcciones.getComponentCount(); j++) {
                    if (jPanel_campo_sinAcciones.getComponents()[j].equals(jpa)) {
                        jPanel_SinAcciones_panel.getVerticalScrollBar().setValue(j * vert);
                        enc = true;
                    }
                }
            }
            if (tipo_acc == ASALTOFASE_CARGA_SORTILEGIO) {
                for (int j = 0; j < jPanel_campo_CargaSortilegios.getComponentCount(); j++) {
                    if (jPanel_campo_CargaSortilegios.getComponents()[j].equals(jpa)) {
                        jPanel_CargaSortilegios_panel.getVerticalScrollBar().setValue(j * vert);
                        enc = true;
                    }
                }
            }
            if (tipo_acc == ASALTOFASE_REALIZA_SORTILEGIO) {
                for (int j = 0; j < jPanel_campo_RealizaSortilegios.getComponentCount(); j++) {
                    if (jPanel_campo_RealizaSortilegios.getComponents()[j].equals(jpa)) {
                        jPanel_RealizaSortilegios_panel.getVerticalScrollBar().setValue(j * vert);
                        enc = true;
                    }
                }
            }
            if (tipo_acc == ASALTOFASE_DISPARA_PROYECTIL) {
                for (int j = 0; j < jPanel_campo_LanzaProyectiles.getComponentCount(); j++) {
                    if (jPanel_campo_LanzaProyectiles.getComponents()[j].equals(jpa)) {
                        jPanel_LanzaProyectiles_panel.getVerticalScrollBar().setValue(j * vert);
                        enc = true;
                    }
                }
            }
            if (tipo_acc == ASALTOFASE_CARGA_PROYECTIL) {
                for (int j = 0; j < jPanel_campo_CargaProyectiles.getComponentCount(); j++) {
                    if (jPanel_campo_CargaProyectiles.getComponents()[j].equals(jpa)) {
                        jPanel_CargaSortilegios_panel.getVerticalScrollBar().setValue(j * vert);
                        enc = true;
                    }
                }
            }
            if (tipo_acc == ASALTOFASE_PARAR_PROYECTIL) {
                for (int j = 0; j < jPanel_campo_PararProyectiles.getComponentCount(); j++) {
                    if (jPanel_campo_PararProyectiles.getComponents()[j].equals(jpa)) {
                        jPanel_pararProyectil_panel.getVerticalScrollBar().setValue(j * vert);
                        enc = true;
                    }
                }
            }
            if (tipo_acc == ASALTOFASE_MOVIMIENTO_Y_MANIOBRA) {
                for (int j = 0; j < jPanel_campo_movimientoYmaniobra.getComponentCount(); j++) {
                    if (jPanel_campo_movimientoYmaniobra.getComponents()[j].equals(jpa)) {
                        jPanel_MovimientoYManiobra_panel.getVerticalScrollBar().setValue(j * vert);
                        enc = true;
                    }
                }
            }
            if (tipo_acc == ASALTOFASE_ATAQUE_CUERPO_A_CUERPO) {
                for (int j = 0; j < jPanel_campo_AtaqueCuerpoaCuerpo.getComponentCount(); j++) {
                    if (jPanel_campo_AtaqueCuerpoaCuerpo.getComponents()[j].equals(jpa)) {
                        jPanel_AtaqueCuperpoaCuerpo_panel.getVerticalScrollBar().setValue(j * vert);
                        enc = true;
                    }
                }
            }
            if (tipo_acc == ASALTOFASE_DESPLAZAMIENTO) {
                for (int j = 0; j < jPanel_campo_Movimiento.getComponentCount(); j++) {
                    if (jPanel_campo_Movimiento.getComponents()[j].equals(jpa)) {
                        jPanel_Movimiento_panel.getVerticalScrollBar().setValue(j * vert);
                        enc = true;
                    }
                }
            }
            if (tipo_acc == ASALTOFASE_MOVIMIENTO_ESTATICO) {
                for (int j = 0; j < jPanel_campo_MovimientoEstatico.getComponentCount(); j++) {
                    if (jPanel_campo_MovimientoEstatico.getComponents()[j].equals(jpa)) {
                        jPanel_MovimientoEstatico_panel.getVerticalScrollBar().setValue(j * vert);
                        enc = true;
                    }
                }
            }
            if (enc) {
                jTabbedPane1.setSelectedIndex(1);
            } else {
                Recursos.informar("No se encuentra al Pj");
            }
        } else {
            Recursos.informar("El pj no es visible");
        }

    }

}
